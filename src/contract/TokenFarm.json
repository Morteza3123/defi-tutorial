{
  "contractName": "TokenFarm",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakingBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "dappToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "daiToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasStaked",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_dappToken",
          "type": "address"
        },
        {
          "name": "_daiToken",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stakeTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dappToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"daiToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasStaked\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_dappToken\",\"type\":\"address\"},{\"name\":\"_daiToken\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/TokenFarm.sol\":\"TokenFarm\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/DaiToken.sol\":{\"keccak256\":\"0x4f93073dc75aff4221a6009217189249be224a3dc7eb45e6c49f8114ce13b0af\",\"urls\":[\"bzzr://b2e95c7a184d14f37eff202a3480660d28eb0e8fd1fbffd88d517f402d4fc5fd\"]},\"project:/contracts/DappToken.sol\":{\"keccak256\":\"0xf6a55e8c79afddf2edd6f3102a9d08585a8f5b9d297561d0684777139515bce3\",\"urls\":[\"bzzr://e2980717b11b6e99aa566d46a1da5852a6536ffb505b9298dc4e11109516c8a7\"]},\"project:/contracts/TokenFarm.sol\":{\"keccak256\":\"0x015d173b60642baee296c30efd4d70b67e19e3fac33951f7cee902c3b58821c3\",\"urls\":[\"bzzr://cb7c949afdd2889c6f6b7da9827d622f09cec0620b92dc1851a7df1a7c84395b\"]}},\"version\":1}",
  "bytecode": "0x60806040526040805190810160405280600f81526020017f4461707020546f6b656e20466f726d00000000000000000000000000000000008152506000908051906020019061004f929190610120565b5034801561005c57600080fd5b506040516040806109218339810180604052604081101561007c57600080fd5b81019080805190602001909291908051906020019092919050505081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506101c5565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061016157805160ff191683800117855561018f565b8280016001018555821561018f579182015b8281111561018e578251825591602001919060010190610173565b5b50905061019c91906101a0565b5090565b6101c291905b808211156101be5760008160009055506001016101a6565b5090565b90565b61074d806101d46000396000f3fe608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461008857806345bc78ab146101185780635eb186f81461017d5780637547c7a3146101d4578063be22f5461461020f578063c93c8f3414610266578063fd5e6dd1146102cf575b600080fd5b34801561009457600080fd5b5061009d61034a565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100dd5780820151818401526020810190506100c2565b50505050905090810190601f16801561010a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561012457600080fd5b506101676004803603602081101561013b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103e8565b6040518082815260200191505060405180910390f35b34801561018957600080fd5b50610192610400565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101e057600080fd5b5061020d600480360360208110156101f757600080fd5b8101908080359060200190929190505050610426565b005b34801561021b57600080fd5b5061022461069d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561027257600080fd5b506102b56004803603602081101561028957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106c3565b604051808215151515815260200191505060405180910390f35b3480156102db57600080fd5b50610308600480360360208110156102f257600080fd5b81019080803590602001909291905050506106e3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103e05780601f106103b5576101008083540402835291602001916103e0565b820191906000526020600020905b8154815290600101906020018083116103c357829003601f168201915b505050505081565b60046020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561051f57600080fd5b505af1158015610533573d6000803e3d6000fd5b505050506040513d602081101561054957600080fd5b81019080805190602001909291905050505080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561069a5760033390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60056020528060005260406000206000915054906101000a900460ff1681565b6003818154811015156106f257fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea165627a7a7230582003ff5eec2cc1208daf6e05d47dfe8ec5bac07512af31944e841085cde35b769c0029",
  "deployedBytecode": "0x608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461008857806345bc78ab146101185780635eb186f81461017d5780637547c7a3146101d4578063be22f5461461020f578063c93c8f3414610266578063fd5e6dd1146102cf575b600080fd5b34801561009457600080fd5b5061009d61034a565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100dd5780820151818401526020810190506100c2565b50505050905090810190601f16801561010a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561012457600080fd5b506101676004803603602081101561013b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103e8565b6040518082815260200191505060405180910390f35b34801561018957600080fd5b50610192610400565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101e057600080fd5b5061020d600480360360208110156101f757600080fd5b8101908080359060200190929190505050610426565b005b34801561021b57600080fd5b5061022461069d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561027257600080fd5b506102b56004803603602081101561028957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106c3565b604051808215151515815260200191505060405180910390f35b3480156102db57600080fd5b50610308600480360360208110156102f257600080fd5b81019080803590602001909291905050506106e3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103e05780601f106103b5576101008083540402835291602001916103e0565b820191906000526020600020905b8154815290600101906020018083116103c357829003601f168201915b505050505081565b60046020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561051f57600080fd5b505af1158015610533573d6000803e3d6000fd5b505050506040513d602081101561054957600080fd5b81019080805190602001909291905050505080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561069a5760033390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60056020528060005260406000206000915054906101000a900460ff1681565b6003818154811015156106f257fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea165627a7a7230582003ff5eec2cc1208daf6e05d47dfe8ec5bac07512af31944e841085cde35b769c0029",
  "sourceMap": "126:709:3:-;;;152:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;398:134;8:9:-1;5:2;;;30:1;27;20:12;5:2;398:134:3;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;398:134:3;;;;;;;;;;;;;;;;;;;;;;;;;483:10;471:9;;:22;;;;;;;;;;;;;;;;;;515:9;504:8;;:20;;;;;;;;;;;;;;;;;;398:134;;126:709;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "126:709:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;152:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;152:38:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;152:38:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;294:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;294:46:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;294:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;197:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;197:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;540:286;;8:9:-1;5:2;;;30:1;27;20:12;5:2;540:286:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;540:286:3;;;;;;;;;;;;;;;;;;;;230:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;230:24:3;;;;;;;;;;;;;;;;;;;;;;;;;;;348:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;348:41:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;348:41:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;263:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;263:24:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;263:24:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;152:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;294:46::-;;;;;;;;;;;;;;;;;:::o;197:26::-;;;;;;;;;;;;;:::o;540:286::-;595:8;;;;;;;;;;;:21;;;617:10;637:4;644:7;595:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;595:57:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;595:57:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;595:57:3;;;;;;;;;;;;;;;;;721:7;692:14;:26;707:10;692:26;;;;;;;;;;;;;;;;:36;663:14;:26;678:10;663:26;;;;;;;;;;;;;;;:65;;;;745:9;:21;755:10;745:21;;;;;;;;;;;;;;;;;;;;;;;;;744:22;741:78;;;783:7;796:10;783:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;783:24:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;741:78;540:286;:::o;230:24::-;;;;;;;;;;;;;:::o;348:41::-;;;;;;;;;;;;;;;;;;;;;;:::o;263:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\nimport './DappToken.sol';\r\nimport './DaiToken.sol';\r\n\r\n\r\ncontract TokenFarm {\r\n    string public name = \"Dapp Token Form\";\r\n    DappToken public dappToken;\r\n    DaiToken public daiToken;\r\n\r\n    address[] public stakers;\r\n    mapping(address => uint) public stakingBalance; \r\n    mapping(address => bool) public hasStaked;\r\n\r\n    constructor (DappToken _dappToken, DaiToken _daiToken) public {\r\n        dappToken = _dappToken;\r\n        daiToken = _daiToken;\r\n    }\r\n\r\n    function stakeTokens(uint _amount) public {\r\n\r\n        daiToken.transferFrom(msg.sender, address(this), _amount);\r\n        stakingBalance[msg.sender] = stakingBalance[msg.sender] + _amount;\r\n\r\n        if(!hasStaked[msg.sender]) {\r\n            stakers.push(msg.sender);\r\n        }\r\n    }\r\n    \r\n}",
  "sourcePath": "E:\\programming\\Dapps\\defi-tutorial\\contracts\\TokenFarm.sol",
  "ast": {
    "absolutePath": "project:/contracts/TokenFarm.sol",
    "exportedSymbols": {
      "TokenFarm": [
        476
      ]
    },
    "id": 477,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 396,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:3"
      },
      {
        "absolutePath": "project:/contracts/DappToken.sol",
        "file": "./DappToken.sol",
        "id": 397,
        "nodeType": "ImportDirective",
        "scope": 477,
        "sourceUnit": 362,
        "src": "69:25:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/DaiToken.sol",
        "file": "./DaiToken.sol",
        "id": 398,
        "nodeType": "ImportDirective",
        "scope": 477,
        "sourceUnit": 181,
        "src": "96:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 476,
        "linearizedBaseContracts": [
          476
        ],
        "name": "TokenFarm",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 401,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 476,
            "src": "152:38:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 399,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "152:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4461707020546f6b656e20466f726d",
              "id": 400,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "173:17:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_1bb421acce1ff2dd73644e002d750e885a7e9d27d37c416ab18d47795e4b0787",
                "typeString": "literal_string \"Dapp Token Form\""
              },
              "value": "Dapp Token Form"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 403,
            "name": "dappToken",
            "nodeType": "VariableDeclaration",
            "scope": 476,
            "src": "197:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DappToken_$361",
              "typeString": "contract DappToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 402,
              "name": "DappToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 361,
              "src": "197:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DappToken_$361",
                "typeString": "contract DappToken"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 405,
            "name": "daiToken",
            "nodeType": "VariableDeclaration",
            "scope": 476,
            "src": "230:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DaiToken_$180",
              "typeString": "contract DaiToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 404,
              "name": "DaiToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 180,
              "src": "230:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DaiToken_$180",
                "typeString": "contract DaiToken"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 408,
            "name": "stakers",
            "nodeType": "VariableDeclaration",
            "scope": 476,
            "src": "263:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 406,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "263:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 407,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "263:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 412,
            "name": "stakingBalance",
            "nodeType": "VariableDeclaration",
            "scope": 476,
            "src": "294:46:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 411,
              "keyType": {
                "id": 409,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "302:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "294:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 410,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "313:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 416,
            "name": "hasStaked",
            "nodeType": "VariableDeclaration",
            "scope": 476,
            "src": "348:41:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 415,
              "keyType": {
                "id": 413,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "356:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "348:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 414,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "367:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 431,
              "nodeType": "Block",
              "src": "460:72:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 423,
                      "name": "dappToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 403,
                      "src": "471:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DappToken_$361",
                        "typeString": "contract DappToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 424,
                      "name": "_dappToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 418,
                      "src": "483:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DappToken_$361",
                        "typeString": "contract DappToken"
                      }
                    },
                    "src": "471:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DappToken_$361",
                      "typeString": "contract DappToken"
                    }
                  },
                  "id": 426,
                  "nodeType": "ExpressionStatement",
                  "src": "471:22:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 427,
                      "name": "daiToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 405,
                      "src": "504:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DaiToken_$180",
                        "typeString": "contract DaiToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 428,
                      "name": "_daiToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 420,
                      "src": "515:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DaiToken_$180",
                        "typeString": "contract DaiToken"
                      }
                    },
                    "src": "504:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaiToken_$180",
                      "typeString": "contract DaiToken"
                    }
                  },
                  "id": 430,
                  "nodeType": "ExpressionStatement",
                  "src": "504:20:3"
                }
              ]
            },
            "documentation": null,
            "id": 432,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 418,
                  "name": "_dappToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "411:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DappToken_$361",
                    "typeString": "contract DappToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 417,
                    "name": "DappToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 361,
                    "src": "411:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DappToken_$361",
                      "typeString": "contract DappToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 420,
                  "name": "_daiToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "433:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaiToken_$180",
                    "typeString": "contract DaiToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 419,
                    "name": "DaiToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 180,
                    "src": "433:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaiToken_$180",
                      "typeString": "contract DaiToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "410:42:3"
            },
            "returnParameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "460:0:3"
            },
            "scope": 476,
            "src": "398:134:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 474,
              "nodeType": "Block",
              "src": "582:244:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 440,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 491,
                          "src": "617:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "617:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 443,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 510,
                            "src": "637:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenFarm_$476",
                              "typeString": "contract TokenFarm"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenFarm_$476",
                              "typeString": "contract TokenFarm"
                            }
                          ],
                          "id": 442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "629:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "629:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 445,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 434,
                        "src": "644:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 437,
                        "name": "daiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 405,
                        "src": "595:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaiToken_$180",
                          "typeString": "contract DaiToken"
                        }
                      },
                      "id": 439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 179,
                      "src": "595:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "595:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 447,
                  "nodeType": "ExpressionStatement",
                  "src": "595:57:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 448,
                        "name": "stakingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 412,
                        "src": "663:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 451,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 449,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 491,
                          "src": "678:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "678:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "663:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 452,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 412,
                          "src": "692:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 455,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 453,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 491,
                            "src": "707:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "707:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "692:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 456,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 434,
                        "src": "721:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "692:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "663:65:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 459,
                  "nodeType": "ExpressionStatement",
                  "src": "663:65:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "744:22:3",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 460,
                        "name": "hasStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 416,
                        "src": "745:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 463,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 461,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 491,
                          "src": "755:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "755:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "745:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 473,
                  "nodeType": "IfStatement",
                  "src": "741:78:3",
                  "trueBody": {
                    "id": 472,
                    "nodeType": "Block",
                    "src": "768:51:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 468,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 491,
                                "src": "796:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 469,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "796:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 465,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 408,
                              "src": "783:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "783:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) returns (uint256)"
                            }
                          },
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "783:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 471,
                        "nodeType": "ExpressionStatement",
                        "src": "783:24:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 475,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 434,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "561:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 433,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "561:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "560:14:3"
            },
            "returnParameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "582:0:3"
            },
            "scope": 476,
            "src": "540:286:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 477,
        "src": "126:709:3"
      }
    ],
    "src": "33:802:3"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/TokenFarm.sol",
      "exportedSymbols": {
        "TokenFarm": [
          476
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".22",
            "<",
            "0.9",
            ".0"
          ]
        },
        "id": 396,
        "name": "PragmaDirective",
        "src": "33:32:3"
      },
      {
        "attributes": {
          "SourceUnit": 362,
          "absolutePath": "project:/contracts/DappToken.sol",
          "file": "./DappToken.sol",
          "scope": 477,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 397,
        "name": "ImportDirective",
        "src": "69:25:3"
      },
      {
        "attributes": {
          "SourceUnit": 181,
          "absolutePath": "project:/contracts/DaiToken.sol",
          "file": "./DaiToken.sol",
          "scope": 477,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 398,
        "name": "ImportDirective",
        "src": "96:24:3"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            476
          ],
          "name": "TokenFarm",
          "scope": 477
        },
        "children": [
          {
            "attributes": {
              "constant": false,
              "name": "name",
              "scope": 476,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 399,
                "name": "ElementaryTypeName",
                "src": "152:6:3"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "4461707020546f6b656e20466f726d",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "string",
                  "type": "literal_string \"Dapp Token Form\"",
                  "value": "Dapp Token Form"
                },
                "id": 400,
                "name": "Literal",
                "src": "173:17:3"
              }
            ],
            "id": 401,
            "name": "VariableDeclaration",
            "src": "152:38:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "dappToken",
              "scope": 476,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract DappToken",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "DappToken",
                  "referencedDeclaration": 361,
                  "type": "contract DappToken"
                },
                "id": 402,
                "name": "UserDefinedTypeName",
                "src": "197:9:3"
              }
            ],
            "id": 403,
            "name": "VariableDeclaration",
            "src": "197:26:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "daiToken",
              "scope": 476,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract DaiToken",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "DaiToken",
                  "referencedDeclaration": 180,
                  "type": "contract DaiToken"
                },
                "id": 404,
                "name": "UserDefinedTypeName",
                "src": "230:8:3"
              }
            ],
            "id": 405,
            "name": "VariableDeclaration",
            "src": "230:24:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "stakers",
              "scope": 476,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address[]",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "address[]"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 406,
                    "name": "ElementaryTypeName",
                    "src": "263:7:3"
                  }
                ],
                "id": 407,
                "name": "ArrayTypeName",
                "src": "263:9:3"
              }
            ],
            "id": 408,
            "name": "VariableDeclaration",
            "src": "263:24:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "stakingBalance",
              "scope": 476,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => uint256)",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => uint256)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 409,
                    "name": "ElementaryTypeName",
                    "src": "302:7:3"
                  },
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 410,
                    "name": "ElementaryTypeName",
                    "src": "313:4:3"
                  }
                ],
                "id": 411,
                "name": "Mapping",
                "src": "294:24:3"
              }
            ],
            "id": 412,
            "name": "VariableDeclaration",
            "src": "294:46:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "hasStaked",
              "scope": 476,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => bool)",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 413,
                    "name": "ElementaryTypeName",
                    "src": "356:7:3"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 414,
                    "name": "ElementaryTypeName",
                    "src": "367:4:3"
                  }
                ],
                "id": 415,
                "name": "Mapping",
                "src": "348:24:3"
              }
            ],
            "id": 416,
            "name": "VariableDeclaration",
            "src": "348:41:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 476,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_dappToken",
                      "scope": 432,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract DappToken",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "DappToken",
                          "referencedDeclaration": 361,
                          "type": "contract DappToken"
                        },
                        "id": 417,
                        "name": "UserDefinedTypeName",
                        "src": "411:9:3"
                      }
                    ],
                    "id": 418,
                    "name": "VariableDeclaration",
                    "src": "411:20:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_daiToken",
                      "scope": 432,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract DaiToken",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "DaiToken",
                          "referencedDeclaration": 180,
                          "type": "contract DaiToken"
                        },
                        "id": 419,
                        "name": "UserDefinedTypeName",
                        "src": "433:8:3"
                      }
                    ],
                    "id": 420,
                    "name": "VariableDeclaration",
                    "src": "433:18:3"
                  }
                ],
                "id": 421,
                "name": "ParameterList",
                "src": "410:42:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 422,
                "name": "ParameterList",
                "src": "460:0:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract DappToken"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 403,
                              "type": "contract DappToken",
                              "value": "dappToken"
                            },
                            "id": 423,
                            "name": "Identifier",
                            "src": "471:9:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 418,
                              "type": "contract DappToken",
                              "value": "_dappToken"
                            },
                            "id": 424,
                            "name": "Identifier",
                            "src": "483:10:3"
                          }
                        ],
                        "id": 425,
                        "name": "Assignment",
                        "src": "471:22:3"
                      }
                    ],
                    "id": 426,
                    "name": "ExpressionStatement",
                    "src": "471:22:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract DaiToken"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 405,
                              "type": "contract DaiToken",
                              "value": "daiToken"
                            },
                            "id": 427,
                            "name": "Identifier",
                            "src": "504:8:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 420,
                              "type": "contract DaiToken",
                              "value": "_daiToken"
                            },
                            "id": 428,
                            "name": "Identifier",
                            "src": "515:9:3"
                          }
                        ],
                        "id": 429,
                        "name": "Assignment",
                        "src": "504:20:3"
                      }
                    ],
                    "id": 430,
                    "name": "ExpressionStatement",
                    "src": "504:20:3"
                  }
                ],
                "id": 431,
                "name": "Block",
                "src": "460:72:3"
              }
            ],
            "id": 432,
            "name": "FunctionDefinition",
            "src": "398:134:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "stakeTokens",
              "scope": 476,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_amount",
                      "scope": 475,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 433,
                        "name": "ElementaryTypeName",
                        "src": "561:4:3"
                      }
                    ],
                    "id": 434,
                    "name": "VariableDeclaration",
                    "src": "561:12:3"
                  }
                ],
                "id": 435,
                "name": "ParameterList",
                "src": "560:14:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 436,
                "name": "ParameterList",
                "src": "582:0:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transferFrom",
                              "referencedDeclaration": 179,
                              "type": "function (address,address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 405,
                                  "type": "contract DaiToken",
                                  "value": "daiToken"
                                },
                                "id": 437,
                                "name": "Identifier",
                                "src": "595:8:3"
                              }
                            ],
                            "id": 439,
                            "name": "MemberAccess",
                            "src": "595:21:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 491,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 440,
                                "name": "Identifier",
                                "src": "617:3:3"
                              }
                            ],
                            "id": 441,
                            "name": "MemberAccess",
                            "src": "617:10:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TokenFarm_$476",
                                      "typeString": "contract TokenFarm"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 442,
                                "name": "ElementaryTypeNameExpression",
                                "src": "629:7:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 510,
                                  "type": "contract TokenFarm",
                                  "value": "this"
                                },
                                "id": 443,
                                "name": "Identifier",
                                "src": "637:4:3"
                              }
                            ],
                            "id": 444,
                            "name": "FunctionCall",
                            "src": "629:13:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 434,
                              "type": "uint256",
                              "value": "_amount"
                            },
                            "id": 445,
                            "name": "Identifier",
                            "src": "644:7:3"
                          }
                        ],
                        "id": 446,
                        "name": "FunctionCall",
                        "src": "595:57:3"
                      }
                    ],
                    "id": 447,
                    "name": "ExpressionStatement",
                    "src": "595:57:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 412,
                                  "type": "mapping(address => uint256)",
                                  "value": "stakingBalance"
                                },
                                "id": 448,
                                "name": "Identifier",
                                "src": "663:14:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 491,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 449,
                                    "name": "Identifier",
                                    "src": "678:3:3"
                                  }
                                ],
                                "id": 450,
                                "name": "MemberAccess",
                                "src": "678:10:3"
                              }
                            ],
                            "id": 451,
                            "name": "IndexAccess",
                            "src": "663:26:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "+",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 412,
                                      "type": "mapping(address => uint256)",
                                      "value": "stakingBalance"
                                    },
                                    "id": 452,
                                    "name": "Identifier",
                                    "src": "692:14:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 491,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 453,
                                        "name": "Identifier",
                                        "src": "707:3:3"
                                      }
                                    ],
                                    "id": 454,
                                    "name": "MemberAccess",
                                    "src": "707:10:3"
                                  }
                                ],
                                "id": 455,
                                "name": "IndexAccess",
                                "src": "692:26:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 434,
                                  "type": "uint256",
                                  "value": "_amount"
                                },
                                "id": 456,
                                "name": "Identifier",
                                "src": "721:7:3"
                              }
                            ],
                            "id": 457,
                            "name": "BinaryOperation",
                            "src": "692:36:3"
                          }
                        ],
                        "id": 458,
                        "name": "Assignment",
                        "src": "663:65:3"
                      }
                    ],
                    "id": 459,
                    "name": "ExpressionStatement",
                    "src": "663:65:3"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "!",
                          "prefix": true,
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 416,
                                  "type": "mapping(address => bool)",
                                  "value": "hasStaked"
                                },
                                "id": 460,
                                "name": "Identifier",
                                "src": "745:9:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 491,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 461,
                                    "name": "Identifier",
                                    "src": "755:3:3"
                                  }
                                ],
                                "id": 462,
                                "name": "MemberAccess",
                                "src": "755:10:3"
                              }
                            ],
                            "id": 463,
                            "name": "IndexAccess",
                            "src": "745:21:3"
                          }
                        ],
                        "id": 464,
                        "name": "UnaryOperation",
                        "src": "744:22:3"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "push",
                                      "referencedDeclaration": null,
                                      "type": "function (address) returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 408,
                                          "type": "address[] storage ref",
                                          "value": "stakers"
                                        },
                                        "id": 465,
                                        "name": "Identifier",
                                        "src": "783:7:3"
                                      }
                                    ],
                                    "id": 467,
                                    "name": "MemberAccess",
                                    "src": "783:12:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 491,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 468,
                                        "name": "Identifier",
                                        "src": "796:3:3"
                                      }
                                    ],
                                    "id": 469,
                                    "name": "MemberAccess",
                                    "src": "796:10:3"
                                  }
                                ],
                                "id": 470,
                                "name": "FunctionCall",
                                "src": "783:24:3"
                              }
                            ],
                            "id": 471,
                            "name": "ExpressionStatement",
                            "src": "783:24:3"
                          }
                        ],
                        "id": 472,
                        "name": "Block",
                        "src": "768:51:3"
                      }
                    ],
                    "id": 473,
                    "name": "IfStatement",
                    "src": "741:78:3"
                  }
                ],
                "id": 474,
                "name": "Block",
                "src": "582:244:3"
              }
            ],
            "id": 475,
            "name": "FunctionDefinition",
            "src": "540:286:3"
          }
        ],
        "id": 476,
        "name": "ContractDefinition",
        "src": "126:709:3"
      }
    ],
    "id": 477,
    "name": "SourceUnit",
    "src": "33:802:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xa34672bcfF2098f5eB151fa652CdE1b9d2f1d2EB",
      "transactionHash": "0x81d15b0390e402d971b0a0a9633324ce585051c6508f7e3aef4d1c4637be165e"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-06T21:40:21.469Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}